name: Build Binaries

on:
  push:
    branches: ["main"]
    tags:
      - "*"

jobs:
  # Build and packages all the things
  build-artifacts:
    strategy:
      fail-fast: false
      matrix:
        # For these target platforms
        include:
          - os: macos-11
            target: x86_64-apple-darwin
            bin_extension: ""
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin_extension: ""
          # - os: windows-2019
          #   target: x86_64-pc-windows-msvc
          #   bin_extension: ".exe"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
      - name: Build
        run: |
          cargo build --target ${{ matrix.target }} --release
      - name: Create zip of binaries
        run: |
          mkdir -p dist
          cp target/${{matrix.target}}/release/server${{matrix.bin_extension}} dist/
          cp target/${{matrix.target}}/release/cli${{matrix.bin_extension}} dist/
          cd dist/
          7z a rust-ci-testing-${{matrix.target}}.zip *
          cd ..
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rust-ci-testing-${{matrix.target}}.zip
          path: dist/rust-ci-testing-${{matrix.target}}.zip
      - name: Upload zip to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/rust-ci-testing-${{matrix.target}}.zip
          asset_name: rust-ci-testing-${{matrix.target}}.zip
          tag: ${{ github.ref }}
          prerelease: true
